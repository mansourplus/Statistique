{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/core/models/view-model.ts","webpack:///src/app/core/modules/mateiral/mateiral.module.ts","webpack:///src/app/core/services/http.service.ts","webpack:///src/app/pages/common/category-card/category-card.component.ts","webpack:///src/app/pages/common/category-card/category-card.component.html","webpack:///src/app/pages/statistiques/statistiques.component.ts","webpack:///src/app/pages/statistiques/statistiques.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","Covid19Model","city","province","country","lastUpdate","cases","active_cases","confirmed","deaths","recovered","serious_critical","new_cases","new_deaths","MaterialModule","HttpService","http","endpoint","data_url_old","hostOld","data_host_old","apikeyOld","data_api_key_old","worldStatsEndpoint","world_stats_url_old","news_url","headers","getHeadersOld","get","pipe","set","getHeaders","data_url","data_host","data_api_key","providedIn","CategoryCardComponent","expanded","toggleBody","StatistiquesComponent","httpService","subs","searchTerm","data","getStat","districtData$","states","countries_stat","map","item","region","country_name","statistic_taken_at","total_recovered","listenToSearchInputAndFilterData","unsubscribe","add","valueChanges","filter","toLowerCase","includes","subscribe","environment","production","world_stats_url","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Statistique';\n}\n","<app-statistiques></app-statistiques>\n<router-outlet></router-outlet>","import { HttpService } from './core/services/http.service';\nimport { HttpClient } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http'; \nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { StatistiquesComponent } from './pages/statistiques/statistiques.component';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { CategoryCardComponent } from './pages/common/category-card/category-card.component';\nimport { MaterialModule } from './core/modules/mateiral/mateiral.module';\nimport { StatistiquesModule } from './pages/statistiques/statistiques.module';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n@NgModule({\n  declarations: [\n    AppComponent,\n    StatistiquesComponent,\n    CategoryCardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    MaterialModule,\n    //StatistiquesModule,\n    ReactiveFormsModule ,\n    FormsModule,\n    FlexLayoutModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { count } from 'rxjs/operators';\r\n\r\nexport class Covid19Model\r\n{\r\n    constructor(\r\n        city:string,\r\n    province:string,\r\n    country:string,\r\n    lastUpdate:Date,\r\n    cases:number,\r\n    active_cases:number,\r\n    confirmed:number,\r\n    deaths:number,\r\n    recovered:number,\r\n    serious_critical:number,\r\n    new_cases:number,\r\n    new_deaths:number)\r\n    {\r\n        this.city=city;\r\n        this.province=province,\r\n        this.country=country;\r\n        this.lastUpdate=lastUpdate;\r\n        this.cases=cases;\r\n        this.active_cases=active_cases;\r\n        this.confirmed=confirmed;\r\n        this.deaths=deaths;\r\n        this.recovered=recovered;\r\n        this.serious_critical=serious_critical;\r\n        this.new_cases=new_cases;\r\n        this.new_deaths=new_deaths;\r\n    }\r\n    city:string;\r\n    province:string;\r\n    country:string;\r\n    lastUpdate:Date;\r\n    keyId:string;\r\n    cases:number;\r\n    active_cases:number;\r\n    confirmed:number;\r\n    deaths:number;\r\n    recovered:number;\r\n    serious_critical:number;\r\n    new_cases:number;\r\n    new_deaths:number;\r\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, MatButtonModule, MatIconModule],\n  exports: [MatButtonModule, MatIconModule]\n})\nexport class MaterialModule {}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { shareReplay, map, filter, tap } from 'rxjs/operators';\n/*import { environment } from '../../environments/environment';\nimport { ContactInfo } from '../interfaces/contacts.interface';\nimport { DistrictData } from '../interfaces/district-data.interface';\nimport { WorldStats } from '../interfaces/stats.interface';\nimport { NewsData } from '../interfaces/news.interface';*/\nimport { ApiResponseModel } from '../models/api-response-model';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\nimport { CaseByCountry } from '../models/api-p-response';\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class HttpService {\n  endpoint = environment.data_url_old;\n  hostOld=environment.data_host_old;\n  apikeyOld=environment.data_api_key_old;\n  worldStatsEndpoint = environment.world_stats_url_old;\n  news_url = environment.news_url;\n  headers:{header:{}};\n  country=\"?country=France\";\n  constructor(private http: HttpClient) { }\n\n  getStatOld():Observable<ApiResponseModel>\n  {\n    var headers=this.getHeadersOld();\n    return this.http.get<ApiResponseModel>(this.endpoint+this.country,{headers}).pipe(shareReplay(1));\n  }\n\n  private getHeadersOld():HttpHeaders\n  {\n    let headers = new HttpHeaders();\n    headers = headers.set('x-rapidapi-host', this.hostOld);\n    headers = headers.set('x-rapidapi-key', this.apikeyOld);\n    return headers;\n  }\n\n  getStat():Observable<CaseByCountry>\n  {\n    var headers=this.getHeaders();\n    return this.http.get<CaseByCountry>(environment.data_url,{headers}).pipe(shareReplay(1));\n  }\n\n  private getHeaders():HttpHeaders\n  {\n    let headers = new HttpHeaders();\n    headers = headers.set('x-rapidapi-host', environment.data_host);\n    headers = headers.set('x-rapidapi-key', environment.data_api_key);\n    return headers;\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Covid19StatsModel } from 'src/app/core/models/api-response-model';\nimport { Covid19Model } from 'src/app/core/models/view-model';\n\n@Component({\n  selector: 'app-category-card',\n  templateUrl: './category-card.component.html',\n  styleUrls: ['./category-card.component.scss']\n})\nexport class CategoryCardComponent implements OnInit {\n\n  @Input() data: Covid19Model;\n\n  expanded = false;\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  toggleBody() {\n    return (this.expanded = !this.expanded);\n  }\n\n}\n","<article class=\"category-card\">\n    <section class=\"category-card__body\" fxLayoutAlign=\"space-between center\" (click)=\"toggleBody()\">\n        <div class=\"info-cards\" fxLayout=\"row nowrap\">\n            <p>{{data?.country}}</p>\n            <article class=\"info-cards__item\">\n                <div class=\"info-cards__item-content\" fxLayout=\"column\">\n                    <span class=\"info-cards__value\">\n                        {{data?.cases}}\n                    </span>\n                    <span class=\"info-cards__label\">Total cases</span>\n                </div>\n            </article>\n            <article class=\"info-cards__item\">\n                <div class=\"info-cards__item-content\" fxLayout=\"column\">\n                    <span class=\"info-cards__value\">\n                        {{data?.new_cases}}\n                    </span>\n                    <span class=\"info-cards__label\">New cases</span>\n                </div>\n            </article>\n            <article class=\"info-cards__item\">\n                <div class=\"info-cards__item-content\" fxLayout=\"column\">\n                    <span class=\"info-cards__value\">\n                        {{data?.new_deaths}}\n                    </span>\n                    <span class=\"info-cards__label\">New deaths</span>\n                </div>\n            </article>\n\n        </div>\n        <div class=\"category__action\" fxLayoutAlign=\"start center\" fxLayoutGap=\"16px\">\n            <button mat-icon-button role=\"button\" aria-label=\"More Details\">\n          <mat-icon class=\"category__action-toggle\" svgIcon=\"arrow_down\" [ngClass]=\"{'invert': expanded}\"></mat-icon>\n        </button>\n\n        </div>\n    </section>\n    <section class=\"category-card__body\" *ngIf=\"expanded\">\n        <div class=\"info-cards\" fxLayout=\"row nowrap\">\n            <article class=\"info-cards__item\" fxFlex=\"33.33\">\n                <div class=\"info-cards__item-content\" fxLayout=\"column\">\n                    <span class=\"info-cards__value\">\n              {{data?.lastUpdate}}\n            </span>\n                    <span class=\"info-cards__label\">Last Update</span>\n                </div>\n            </article>\n            <article class=\"info-cards__item\" fxFlex=\"33.33\">\n                <div class=\"info-cards__item-content\" fxLayout=\"column\">\n                    <span class=\"info-cards__value\">\n              {{data?.deaths}}\n            </span>\n                    <span class=\"info-cards__label\">Deaths</span>\n                </div>\n            </article>\n            <article class=\"info-cards__item\" fxFlex=\"33.33\">\n                <div class=\"info-cards__item-content\" fxLayout=\"column\">\n                    <span class=\"info-cards__value\">\n              {{data?.recovered}}\n            </span>\n                    <span class=\"info-cards__label\">Recovered</span>\n                </div>\n            </article>\n        </div>\n        <div class=\"actions\" fxLayout=\"row\" fxLayoutGap=\"16px\" fxLayoutAlign=\"center center\">\n            <button mat-button>\n          <mat-icon class=\"category__action-icon\" svgIcon=\"share\"></mat-icon>\n          <span>&nbsp;Share Info</span>\n        </button>\n            <button mat-button [routerLink]=\"['/view/', data?.country]\" routerLinkActive=\"router-link-active\">\n          <mat-icon class=\"category__action-icon\" svgIcon=\"share_new_tab\"></mat-icon>\n          <span> &nbsp;More Details</span>\n        </button>\n        </div>\n    </section>\n</article>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { HttpService } from 'src/app/core/services/http.service';\nimport { Observable } from 'rxjs';\nimport { debounceTime, tap, map } from 'rxjs/operators';\nimport { SubSink } from 'subsink';\nimport { FormControl } from '@angular/forms';\nimport { Covid19Model } from 'src/app/core/models/view-model';\n\n@Component({\n  selector: 'app-statistiques',\n  templateUrl: './statistiques.component.html',\n  styleUrls: ['./statistiques.component.scss']\n})\nexport class StatistiquesComponent implements OnInit, OnDestroy {\n  \n  searchTerm: FormControl;\n  districtData$:Observable<Covid19Model[]>;\n  private subs = new SubSink();\n  constructor(private httpService:HttpService) { }\n\n  ngOnInit(): void {\n    this.searchTerm = new FormControl();\n    var data = this.httpService.getStat();\n    this.districtData$ = data.pipe(map(states=>states.countries_stat.map(item=> new Covid19Model(\n      item.region,\n      item.region,\n      item.country_name,\n       states.statistic_taken_at,\n       item.cases,\n       item.active_cases,\n       0,\n       item.deaths,\n       item.total_recovered,\n       item.serious_critical,\n       item.new_cases,\n       item.new_deaths))));\n       this.listenToSearchInputAndFilterData();\n  }\n\n  ngOnDestroy(): void {\n    this.subs.unsubscribe();\n  }\n\n  listenToSearchInputAndFilterData() {\n    this.subs.add(\n      this.searchTerm.valueChanges\n        .pipe(\n          debounceTime(500),\n          tap(data => {\n            this.districtData$ = this.httpService.getStat().pipe(\n              map(states =>\n                states.countries_stat.map(item=> new Covid19Model(\n                  item.region,\n                  item.region,\n                  item.country_name,\n                   states.statistic_taken_at,\n                   item.cases,\n                   item.active_cases,\n                   0,\n                   item.deaths,\n                   item.total_recovered,\n                   item.serious_critical,\n                   item.new_cases,\n                   item.new_deaths)).filter((item: Covid19Model) => {\n                  return item.country.toLowerCase().includes(data.toLowerCase());\n                })\n              )\n            );\n          })\n        )\n        .subscribe()\n    );\n  }\n\n}\n","<main>\n    <section class=\"state-info\">\n        <div class=\"section__heading\" fxLayout=\"row nowrap\" fxLayoutAlign=\"space-between center\">\n            <h3>State Wise</h3>\n            <span></span>\n        </div>\n        <div class=\"state-info__search\" fxLayoutAlign=\"start center\">\n            <div class=\"search__input\" fxFlex=\"100\">\n                <form>\n                    <mat-icon svgIcon=\"search\" class=\"search__icon\"></mat-icon>\n                    <input type=\"text\" role=\"searchbox\" aria-label=\"Search\" placeholder=\"Search state\" #search id=\"search\" [formControl]=\"searchTerm\">\n                </form>\n\n                <!--<button mat-flat-button color=\"primary\" class=\"search__button\" fxFlex=\"20\" *ngIf=\"search.value.length > 0\" (onclick=\"listenToSearchInputAndFilterData\" )>Search</button>-->\n\n            </div>\n\n        </div>\n        <ng-container *ngIf=\"districtData$ | async as districtData\">\n            <div class=\"state-info__items\" *ngFor=\"let state of districtData\">\n                <app-category-card [data]=\"state\"></app-category-card>\n            </div>\n\n        </ng-container>\n    </section>\n</main>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n    data_url_old: 'https://covid-19-coronavirus-statistics.p.rapidapi.com/v1/stats',\n    data_host_old:'covid-19-coronavirus-statistics.p.rapidapi.com',\n    data_api_key_old:'17e8efc68cmsh25cb37a6dd0ad33p188d8bjsn153da8654eb7',\n    world_stats_url_old: 'https://corona.lmao.ninja/all',\n    news_url:\n      'https://newsapi.org/v2/everything?q=COVID&from=2020-03-16&sortBy=publishedAt&apiKey=7f3341405a794a92a026e79902e89593&pageSize=100&language=en',\n      data_url: 'https://coronavirus-monitor.p.rapidapi.com/coronavirus/cases_by_country.php',\n      data_host:'coronavirus-monitor.p.rapidapi.com',\n      data_api_key:'17e8efc68cmsh25cb37a6dd0ad33p188d8bjsn153da8654eb7',\n      world_stats_url: 'https://corona.lmao.ninja/all',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}